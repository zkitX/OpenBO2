#pragma once

#include <gfx_d3d/r_utils.h>

#include <qcommon/com_clients.h>
#include <qcommon/threads_interlock.h>
#include <universal/memfile.h>

enum dvarType_t
{
	DVAR_TYPE_INVALID = 0x0,
	DVAR_TYPE_BOOL = 0x1,
	DVAR_TYPE_FLOAT = 0x2,
	DVAR_TYPE_FLOAT_2 = 0x3,
	DVAR_TYPE_FLOAT_3 = 0x4,
	DVAR_TYPE_FLOAT_4 = 0x5,
	DVAR_TYPE_INT = 0x6,
	DVAR_TYPE_ENUM = 0x7,
	DVAR_TYPE_STRING = 0x8,
	DVAR_TYPE_COLOR = 0x9,
	DVAR_TYPE_INT64 = 0xA,
	DVAR_TYPE_LINEAR_COLOR_RGB = 0xB,
	DVAR_TYPE_COLOR_XYZ = 0xC,
	DVAR_TYPE_COUNT = 0xD,
};

enum DvarSetSource
{
	DVAR_SOURCE_INTERNAL = 0x0,
	DVAR_SOURCE_EXTERNAL = 0x1,
	DVAR_SOURCE_SCRIPT = 0x2,
	DVAR_SOURCE_DEVGUI = 0x3,
};

union DvarValue
{
	bool enabled;
	int integer;
	unsigned int unsignedInt;
	long long integer64;
	unsigned long long unsignedInt64;
	float value;
	vec4_t vector;
	const char* string;
	char color[4];
};

union DvarLimits
{
	struct {
		int stringCount;
		const char** strings;
	} enumeration;
	struct {
		int min;
		int max;
	} integer;
	struct {
		long long min;
		long long max;
	} integer64;
	struct {
		float min;
		float max;
	} value;
	struct {
		float min;
		float max;
	} vector;

	DvarLimits operator=(DvarValue value) {
		DvarLimits out;

		out.enumeration.strings = (const char**)value.integer64;
		out.integer64.min = value.integer64;
		out.integer.max = value.integer64;
		out.value.max = value.vector.v[1];
		out.vector.max = value.vector.v[1];

		return out;
	}
};

struct dvar_t
{
	const char* name;
	const char* description;
	int hash;
	unsigned int flags;
	dvarType_t type;
	bool modified;
	DvarValue current;
	DvarValue latched;
	DvarValue reset;
	DvarLimits domain;
	dvar_t* hashNext;
};

struct dvarCallBack_t
{
	bool needsCallback;
	void(* callback)(const dvar_t*);
	const dvar_t* dvar;
};

struct enumDvarDef_s
{
	const char* enumDvarName;
};

dvarCallBack_t* s_dvarCallbackPool[64];

bool s_areDvarsSorted;
bool s_canSetConfigDvars;
dvar_t s_dvarPool[4320];
bool s_isDvarSystemActive;
bool s_isLoadingAutoExecGlobalFlag;
int s_nextFreeCallback;
const dvar_t* s_sortedDvars[4320];
const dvar_t* dvar_cheats;
FastCriticalSection g_dvarCritSect;
int g_dvarCount;
int g_dvar_modifiedFlags;

dvar_t* s_dvarHashTable[1080];
const dvar_t* allClientDvarsEnabled;
const dvar_t* loc_language;;

#pragma region DVARS
const dvar_t* ai_ShowCanSeeChecks;
const dvar_t* ai_accu_player_lateral_speed;
const dvar_t* ai_badPathSpam;
const dvar_t* ai_debugEntLock;
const dvar_t* ai_debug_dynamic_nodes;
const dvar_t* ai_enableBadPlaces;
const dvar_t* ai_secondaryThreats;
const dvar_t* bg_afterLifeGravityScale;
const dvar_t* bg_drawGrenadeInHand;
const dvar_t* bg_drawProximity;
const dvar_t* bg_enableIKActiveFix;
const dvar_t* bg_freeCamClipToHeliPatch;
const dvar_t* bg_maxWeaponAnimScale;
const dvar_t* bg_playStandToCrouchAnims;
const dvar_t* bg_weaponBobAmplitudeBase;
const dvar_t* bg_weaponleftbone;
const dvar_t* bg_weaponrightbone;
const dvar_t* cg_ScoresPing_Interval;
const dvar_t* cg_ScoresPing_MaxBars;
const dvar_t* cg_adsZoomToggleStyle;
const dvar_t* cg_ai_useServerAnims;
const dvar_t* cg_animInfoCornerOffset;
const dvar_t* cg_argus_datastack;
const dvar_t* cg_bloodLimit;
const dvar_t* cg_bloodLimitMsec;
const dvar_t* cg_brass;
const dvar_t* cg_cameraVzoomToggleTime;
const dvar_t* cg_chatHeight;
const dvar_t* cg_chatTime;
const dvar_t* cg_connectionIconSize;
const dvar_t* cg_deathScreenFadeInTime;
const dvar_t* cg_deathScreenFadeOutTime;
const dvar_t* cg_debugDrawSafeAreas;
const dvar_t* cg_debugEllipsesOffset;
const dvar_t* cg_debugInfoCornerOffset;
const dvar_t* cg_debug_triggers;
const dvar_t* cg_defensive_anim_delay;
const dvar_t* cg_descriptiveText;
const dvar_t* cg_drawFPSLabels;
const dvar_t* cg_drawFPSScale;
const dvar_t* cg_drawMantleHint;
const dvar_t* cg_drawScriptUsage;
const dvar_t* cg_drawSnapshot;
const dvar_t* cg_drawSpectatorMessages;
const dvar_t* cg_drawTurretCrosshair;
const dvar_t* cg_drawVersion;
const dvar_t* cg_drawVersionX;
const dvar_t* cg_drawVersionY;
const dvar_t* cg_drawWaypointsPostBloom;
const dvar_t* cg_drawYouInKillCamAsWaypoint;
const dvar_t* cg_errorDecay;
const dvar_t* cg_forceEmp;
const dvar_t* cg_fov_comp_max;
const dvar_t* cg_fov_default;
const dvar_t* cg_fov_default_nocomp;
const dvar_t* cg_fov_default_thirdperson;
const dvar_t* cg_fullscreenFinalKillcam;
const dvar_t* cg_gameBoldMessageWidth;
const dvar_t* cg_gameMessageWidth;
const dvar_t* cg_gamemessageiconscale;
const dvar_t* cg_gun_fovcomp_x;
const dvar_t* cg_gun_fovcomp_y;
const dvar_t* cg_gun_fovcomp_z;
const dvar_t* cg_hintFadeTime;
const dvar_t* cg_hudChatIntermissionPosition;
const dvar_t* cg_hudChatPosition;
const dvar_t* cg_hudDamageDirectionalIconTime;
const dvar_t* cg_hudDamageIconHeight;
const dvar_t* cg_hudDamageIconInScope;
const dvar_t* cg_hudDamageIconOffset;
const dvar_t* cg_hudDamageIconTime;
const dvar_t* cg_hudDamageIconWidth;
const dvar_t* cg_hudFriendlyIndicatorHeight;
const dvar_t* cg_hudFriendlyIndicatorWidth;
const dvar_t* cg_hudGrenadeIconEnabledFlash;
const dvar_t* cg_hudGrenadeIconInScope;
const dvar_t* cg_hudGrenadeIconMaxHeight;
const dvar_t* cg_hudGrenadeIndicatorFadeUp;
const dvar_t* cg_hudGrenadeIndicatorStartColor;
const dvar_t* cg_hudGrenadeIndicatorTargetColor;
const dvar_t* cg_hudGrenadePointerPulseFreq;
const dvar_t* cg_hudGrenadePointerPulseMax;
const dvar_t* cg_hudGrenadePointerPulseMin;
const dvar_t* cg_hudLegacySplitscreenScale;
const dvar_t* cg_hudProneY;
const dvar_t* cg_hudSayPosition;
const dvar_t* cg_hudSplitscreenBannerScoreboardScale;
const dvar_t* cg_hudSplitscreenCompassElementScale;
const dvar_t* cg_hudSplitscreenCompassScale;
const dvar_t* cg_hudSplitscreenOffsetsUseScale;
const dvar_t* cg_hudSplitscreenScoreboardScale;
const dvar_t* cg_hudSplitscreenStanceScale;
const dvar_t* cg_hudStanceHintPrints;
const dvar_t* cg_hudVotePosition;
const dvar_t* cg_infraredHighlightOffset;
const dvar_t* cg_infraredHighlightScale;
const dvar_t* cg_invalidCmdHintBlinkInterval;
const dvar_t* cg_invalidCmdHintDuration;
const dvar_t* cg_laserLight;
const dvar_t* cg_mapLocationSelectionCursorSpeed;
const dvar_t* cg_mapLocationSelectionRotationSpeed;
const dvar_t* cg_marks_ents_player_only;
const dvar_t* cg_marqueeTimeScale;
const dvar_t* cg_maxExplosionRadius;
const dvar_t* cg_minicon;
const dvar_t* cg_nopredict;
const dvar_t* cg_objectiveListWrapCountStandard;
const dvar_t* cg_objectiveListWrapCountWidescreen;
const dvar_t* cg_oneFriendlyHeadTracePerFrame;
const dvar_t* cg_overheadNamesFont;
const dvar_t* cg_playersInViewMinDot;
const dvar_t* cg_predictItems;
const dvar_t* cg_profile_physics;
const dvar_t* cg_rangeFinderActiveReticleIndex;
const dvar_t* cg_rangeFinderColorChangeDelay;
const dvar_t* cg_rangeFinderDefaultDisplayStr;
const dvar_t* cg_rangeFinderDefaultReticleIndex;
const dvar_t* cg_rangefinderIndicatorGap;
const dvar_t* cg_rangefinderIndicatorSize;
const dvar_t* cg_scoreboardBannerHeight;
const dvar_t* cg_scoreboardFont;
const dvar_t* cg_scoreboardHeight;
const dvar_t* cg_scoreboardItemHeight;
const dvar_t* cg_scoreboardPingGraph;
const dvar_t* cg_scoreboardPingHeight;
const dvar_t* cg_scoreboardPingText;
const dvar_t* cg_scoreboardPingWidth;
const dvar_t* cg_scoreboardQuarterscreenWidth;
const dvar_t* cg_scoreboardRankFontScale;
const dvar_t* cg_scoreboardScrollStep;
const dvar_t* cg_scoreboardSplitscreenWidth;
const dvar_t* cg_scoreboardTextOffset;
const dvar_t* cg_scoreboardWidth;
const dvar_t* cg_scriptIconSize;
const dvar_t* cg_scriptmover_useServerAnims;
const dvar_t* cg_seatHintFadeTime;
const dvar_t* cg_sensorGrenadeCrouchZOffset;
const dvar_t* cg_sensorGrenadeExplosionTrackTimeMs;
const dvar_t* cg_sensorGrenadeLaserActiveTimeMs;
const dvar_t* cg_sensorGrenadeLaserRadius;
const dvar_t* cg_sensorGrenadeProneZOffset;
const dvar_t* cg_sensorGrenadePulsePeriodMs;
const dvar_t* cg_sensorGrenadeRampAlpha;
const dvar_t* cg_sensorGrenadeRange;
const dvar_t* cg_sensorGrenadeZOffset;
const dvar_t* cg_showZombieMap;
const dvar_t* cg_showmiss;
const dvar_t* cg_splitscreenLetterboxSize;
const dvar_t* cg_splitscreenSpectatorScaleIncrease;
const dvar_t* cg_sprintMeterDisabledColor;
const dvar_t* cg_sprintMeterEmptyColor;
const dvar_t* cg_sprintMeterFullColor;
const dvar_t* cg_subtitleMinTime;
const dvar_t* cg_teamChatsOnly;
const dvar_t* cg_thirdPersonFootstepsFromNotetracks;
const dvar_t* cg_voiceIconSize;
const dvar_t* cg_waterTrailRippleFrequency;
const dvar_t* cg_waterTrailRippleVariance;
const dvar_t* cg_weaponCycleDelay;
const dvar_t* cg_youInKillCamSize;
const dvar_t* cheapSpawns;
const dvar_t* cl_analog_attack_threshold;
const dvar_t* cl_anglespeedkey;
const dvar_t* cl_avidemo;
const dvar_t* cl_dblTapMaxDelayTime;
const dvar_t* cl_dblTapMaxHoldTime;
const dvar_t* cl_dtpHoldTime;
const dvar_t* cl_forceavidemo;
const dvar_t* cl_hudDrawsBehindUI;
const dvar_t* cl_maxpackets;
const dvar_t* cl_noprint;
const dvar_t* cl_packetdup;
const dvar_t* cl_pitchspeed;
const dvar_t* cl_serverStatusResendTime;
const dvar_t* cl_showMouseRate;
const dvar_t* cl_showSend;
const dvar_t* cl_showServerCommands;
const dvar_t* cl_showTimeDelta;
const dvar_t* cl_shownet;
const dvar_t* cl_shownuments;
const dvar_t* cl_socketpool_enabled;
const dvar_t* cl_socketpool_size;
const dvar_t* cl_stanceHoldTime;
const dvar_t* cl_viewport_lerptime;
const dvar_t* cl_weapNextHoldTime;
const dvar_t* cl_yawspeed;
const dvar_t* com_animCheck;
const dvar_t* com_attractmode;
const dvar_t* com_attractmodeduration;
const dvar_t* com_filter_output;
const dvar_t* com_maxFrameTime;
const dvar_t* com_script_debugger_smoke_test;
const dvar_t* com_voip_bandwidth_restricted;
const dvar_t* com_voip_disable_threshold;
const dvar_t* compassCoords;
const dvar_t* compassECoordCutoff;
const dvar_t* compassFriendlyHeight;
const dvar_t* compassFriendlyWidth;
const dvar_t* compassIconOtherVehHeight;
const dvar_t* compassIconOtherVehWidth;
const dvar_t* compassIconTankHeight;
const dvar_t* compassIconTankScale;
const dvar_t* compassIconTankWidth;
const dvar_t* compassObituaryHeight;
const dvar_t* compassObituaryWidth;
const dvar_t* compassObjectiveIconHeight;
const dvar_t* compassObjectiveIconHeightZombie;
const dvar_t* compassObjectiveIconWidth;
const dvar_t* compassObjectiveIconWidthZombie;
const dvar_t* compassObjectiveMaxRange;
const dvar_t* compassObjectiveMinAlpha;
const dvar_t* compassObjectiveNumRings;
const dvar_t* compassObjectiveRingSize;
const dvar_t* compassObjectiveRingTime;
const dvar_t* compassPartialType;
const dvar_t* compassPlayerHeight;
const dvar_t* compassPlayerWidth;
const dvar_t* compassRotation;
const dvar_t* compassSize;
const dvar_t* compassSpectatorsSeeEnemies;
const dvar_t* compassTickertapeStretch;
const dvar_t* con_MiniConSplitscreenScale;
const dvar_t* con_default_console_filter;
const dvar_t* con_errormessagetime;
const dvar_t* con_inputBoxColor;
const dvar_t* con_inputHintBoxColor;
const dvar_t* con_matchPrefixOnly;
const dvar_t* con_miniconlines;
const dvar_t* con_minicontime;
const dvar_t* con_outputBarColor;
const dvar_t* con_outputSliderColor;
const dvar_t* con_outputWindowColor;
const dvar_t* con_restricted;
const dvar_t* con_typewriterColorGlowCheckpoint;
const dvar_t* con_typewriterColorGlowCompleted;
const dvar_t* con_typewriterColorGlowFailed;
const dvar_t* con_typewriterColorGlowUpdated;
const dvar_t* con_typewriterDecayDuration;
const dvar_t* con_typewriterDecayStartTime;
const dvar_t* con_typewriterEnabledSounds;
const dvar_t* con_typewriterPrintSpeed;
const dvar_t* dcacheSimulateNoHDD;
const dvar_t* debugCurves;
const dvar_t* debug_audio;
const dvar_t* debug_mover;
const dvar_t* debug_triggers;
const dvar_t* demo_drawdebuginformation;
const dvar_t* demo_profiling;
const dvar_t* demo_usefilesystem;
const dvar_t* drawEntityCount;
const dvar_t* drawEntityCountPos;
const dvar_t* drawEntityCountSize;
const dvar_t* drawKillcamData;
const dvar_t* drawKillcamDataPos;
const dvar_t* drawKillcamDataSize;
const dvar_t* drawServerBandwidth;
const dvar_t* drawServerBandwidthPos;
const dvar_t* drawServerBandwidthSize;
const dvar_t* dvar_maxCallbackTimeMS;
const dvar_t* dynEnt_sentientAutoActivate;
const dvar_t* emblem_scroll_delay_first;
const dvar_t* emblem_scroll_delay_rest;
const dvar_t* enable_cheap_ents;
const dvar_t* facepaintLodDist;
const dvar_t* flameVar_editingFlameTable;
const dvar_t* flameVar_lastFlameTable;
const dvar_t* forceEliteFounder;
const dvar_t* forceElitePopups;
const dvar_t* forceEliteSubscription;
const dvar_t* freeBuffersDelay;
const dvar_t* friendlyNameFontColor;
const dvar_t* friendlyNameFontGlowColor;
const dvar_t* friendlyNameFontObjective;
const dvar_t* friendlyNameSplitScreenFontSize;
const dvar_t* fsShowStreamingGraph;
const dvar_t* fsSlotEmptyHiddenColor;
const dvar_t* fsSlotEmptyMainColor;
const dvar_t* fsSlotEmptyNotSubscribedColor;
const dvar_t* fsSlotEmptyShowColor;
const dvar_t* fsSlotEmptyShowColorBg;
const dvar_t* fsSlotHighlightedColor;
const dvar_t* fsSlotHighlightedColorNoSel;
const dvar_t* fsSlotMainColor;
const dvar_t* fsSlotNumMainColor;
const dvar_t* fsSlotNumNoSubsribeColor;
const dvar_t* fsStarAvgColor;
const dvar_t* fsStarHighlightColor;
const dvar_t* fshOldItemColor;
const dvar_t* fudgefactor;
const dvar_t* fx_cull_effect_spawn;
const dvar_t* fx_cull_elem_draw;
const dvar_t* fx_cull_elem_spawn;
const dvar_t* fx_marks;
const dvar_t* fx_marks_ents;
const dvar_t* fx_marks_smodels;
const dvar_t* g_antilag;
const dvar_t* g_bDebugRenderBrushes;
const dvar_t* g_bDebugRenderBulletMeshes;
const dvar_t* g_bDebugRenderColoredPatches;
const dvar_t* g_bDebugRenderEntityBrushes;
const dvar_t* g_bDebugRenderMeshType;
const dvar_t* g_bDebugRenderPatches;
const dvar_t* g_bDebugRenderStaticModelsBounds;
const dvar_t* g_changelevel_time;
const dvar_t* g_clonePlayerMaxVelocity;
const dvar_t* g_deadChat;
const dvar_t* g_deathDelay;
const dvar_t* g_debugRankXP;
const dvar_t* g_debugRenderGjkTraceGeom;
const dvar_t* g_debugWeaponXP;
const dvar_t* g_dropForwardSpeed;
const dvar_t* g_dropHorzSpeedRand;
const dvar_t* g_dropUpSpeedBase;
const dvar_t* g_dropUpSpeedRand;
const dvar_t* g_droppedWeaponPhysics;
const dvar_t* g_dumpStaticModels;
const dvar_t* g_inactivity;
const dvar_t* g_oldAnimCmdNetwork;
const dvar_t* g_playerCollisionEjectSpeed;
const dvar_t* g_playerRespawnTime;
const dvar_t* g_smoothClients;
const dvar_t* g_useholdtime;
const dvar_t* g_voiceChatTalkingDuration;
const dvar_t* g_voteAbstainWeight;
const dvar_t* glassCrackedDamageRateRange;
const dvar_t* glassExtraAngVelocity;
const dvar_t* glassExtraLinVelocity;
const dvar_t* glassForceAttenuation;
const dvar_t* glassForceMultiplier;
const dvar_t* glassForceOriginMult;
const dvar_t* glassLinVelMultiplier;
const dvar_t* glassLowLodDist;
const dvar_t* glassMaxShardLife;
const dvar_t* gpad_menu_scroll_delay_first;
const dvar_t* gpad_menu_scroll_delay_rest;
const dvar_t* grenadeUseRigidBodyPhysics;
const dvar_t* gump_verbose;
const dvar_t* hostileNameFontColor;
const dvar_t* hostileNameFontGlowColor;
const dvar_t* hud_deathQuoteFadeTime;
const dvar_t* hud_fade_ammodisplay;
const dvar_t* hud_fade_compass;
const dvar_t* hud_fade_healthbar;
const dvar_t* hud_fade_offhand;
const dvar_t* hud_fade_sprint;
const dvar_t* hud_fade_vehiclecontrols;
const dvar_t* hud_flash_period_offhand;
const dvar_t* hud_flash_time_offhand;
const dvar_t* lastStandSwayAccel;
const dvar_t* lastStandSwayMaxDrift;
const dvar_t* live_steam_server_client_checks_interval;
const dvar_t* loc_translate;
const dvar_t* lowAmmoWarningPulseFreq;
const dvar_t* lowAmmoWarningPulseMax;
const dvar_t* lowAmmoWarningPulseMin;
const dvar_t* lua_systemTest;
const dvar_t* lui_enabled;
const dvar_t* lui_highlightScaledText;
const dvar_t* maxAttachmentsPerWeapon;
const dvar_t* maxGlassShatters;
const dvar_t* missileDebugAttractors;
const dvar_t* missileDebugDraw;
const dvar_t* missileDebugText;
const dvar_t* modPrvAnimDumpInTime;
const dvar_t* modPrvAnimDumpOutTime;
const dvar_t* modPrvCurrAndMaxFrameIndexes;
const dvar_t* modPrvUseAnimDump;
const dvar_t* msg_dumpEnts;
const dvar_t* msg_hudelemspew;
const dvar_t* msg_printEntityNums;
const dvar_t* msg_zlibCompress;
const dvar_t* msg_zlibCompressOutput;
const dvar_t* narrowShardRatio;
const dvar_t* net_broadcast;
const dvar_t* net_debug_server_time_error;
const dvar_t* net_logSnapshotTiming;
const dvar_t* net_minigraph;
const dvar_t* net_profile;
const dvar_t* net_showprofile;
const dvar_t* noCheapSpawns;
const dvar_t* packetDebug;
const dvar_t* party_debug;
const dvar_t* party_debugMembers;
const dvar_t* party_reliableMigrate;
const dvar_t* phys_ai_collision_mode;
const dvar_t* phys_bulletSpinScale;
const dvar_t* phys_bulletUpBias;
const dvar_t* phys_buoyancyFastComputation;
const dvar_t* phys_buoyancyRippleFrequency;
const dvar_t* phys_buoyancyRippleVariance;
const dvar_t* phys_debugBigQueries;
const dvar_t* phys_debugCallback;
const dvar_t* phys_debugDangerousRigidBodies;
const dvar_t* phys_debugExpensivePushout;
const dvar_t* phys_dragAngular;
const dvar_t* phys_dragLinear;
const dvar_t* phys_drawCollisionObj;
const dvar_t* phys_drawNitrousVehicle;
const dvar_t* phys_drawNitrousVehicleEffects;
const dvar_t* phys_drawcontacts;
const dvar_t* phys_entityCollision;
const dvar_t* phys_floatTimeVariance;
const dvar_t* phys_fluid;
const dvar_t* phys_impact_max_pfx_per_frame;
const dvar_t* phys_impact_max_sfx_per_frame;
const dvar_t* phys_impact_render;
const dvar_t* phys_impact_silence_window;
const dvar_t* phys_msecStep;
const dvar_t* phys_player_collision_adjust_height;
const dvar_t* phys_player_collision_mode;
const dvar_t* phys_player_step_on_actors;
const dvar_t* phys_ragdoll_joint_damp_scale;
const dvar_t* phys_reeval_frequency;
const dvar_t* phys_userRigidBodies;
const dvar_t* phys_vehicleFriction;
const dvar_t* phys_verbose;
const dvar_t* phys_waterDragAngular;
const dvar_t* phys_waterDragLinear;
const dvar_t* player_AimBlend_Back_Low;
const dvar_t* player_AimBlend_Back_Mid;
const dvar_t* player_AimBlend_Back_Up;
const dvar_t* player_AimBlend_Head;
const dvar_t* player_AimBlend_Neck;
const dvar_t* player_AimBlend_Pelvis;
const dvar_t* player_disableWeaponsInWater;
const dvar_t* player_floatSpeed;
const dvar_t* player_meleeCOD4ChargeMovement;
const dvar_t* player_turnRateScale;
const dvar_t* player_useSlopeAnims;
const dvar_t* player_waistWaterFrictionScale;
const dvar_t* profile_reset;
const dvar_t* ps3_syscacheEnabled;
const dvar_t* r_cacheModelLighting;
const dvar_t* r_cache_shadowable_lights;
const dvar_t* r_clear;
const dvar_t* r_cmdbuf_worker;
const dvar_t* r_disableLightGridSuppresion;
const dvar_t* r_dlightMaxFullScreenRadius;
const dvar_t* r_dlightMaxNonFullScreenRadius;
const dvar_t* r_flameFX_enable;
const dvar_t* r_fovScaleThresholdRigid;
const dvar_t* r_fovScaleThresholdSkinned;
const dvar_t* r_framelock;
const dvar_t* r_framesyncThreshold;
const dvar_t* r_fullHDRrendering;
const dvar_t* r_fxaa;
const dvar_t* r_genericFilter_enable;
const dvar_t* r_heroLightColorTemp;
const dvar_t* r_heroLightSaturation;
const dvar_t* r_hideShadowingSmodels;
const dvar_t* r_hideShadowingSurfaces;
const dvar_t* r_pixelShaderGPRReallocation;
const dvar_t* r_poisonFX_debug_amount;
const dvar_t* r_poisonFX_dvisionA;
const dvar_t* r_poisonFX_dvisionY;
const dvar_t* r_poisonFX_warpX;
const dvar_t* r_poisonFX_warpY;
const dvar_t* r_polygonOffsetBiasFloat;
const dvar_t* r_polygonOffsetBiasInt;
const dvar_t* r_polygonOffsetScale;
const dvar_t* r_portalBevels;
const dvar_t* r_portalBevelsOnly;
const dvar_t* r_portalMinClipArea;
const dvar_t* r_setFrameBufferAlpha;
const dvar_t* r_skinCache;
const dvar_t* r_smp_backend;
const dvar_t* r_stereo3DShadowOpt;
const dvar_t* r_streamAllowLargeImages;
const dvar_t* r_streamAssertHashes;
const dvar_t* r_streamReflectionProbes;
const dvar_t* r_superFlare_debug;
const dvar_t* r_superFlare_enable;
const dvar_t* r_swrk_override_enable;
const dvar_t* r_waterSheetingFX_fadeDuration;
const dvar_t* ragdoll_dump_anims;
const dvar_t* ragdoll_enable;
const dvar_t* ragdoll_max_simulating;
const dvar_t* rb_drawCullWorkerDebugText;
const dvar_t* rb_drawSonarDebugText;
const dvar_t* render_actor_collision;
const dvar_t* render_bpi_env_collision;
const dvar_t* render_fake_ents;
const dvar_t* render_player_collision;
const dvar_t* render_script_movers;
const dvar_t* riotshield_carry_model;
const dvar_t* riotshield_debug;
const dvar_t* riotshield_placement_foffset;
const dvar_t* riotshield_placement_maxs;
const dvar_t* riotshield_stowed_model;
const dvar_t* scr_skip_devblock;
const dvar_t* shardEdgeSize;
const dvar_t* shardShatterSizeLimitScale;
const dvar_t* shardSplitDir;
const dvar_t* shardSplitDir2;
const dvar_t* shatterFxMaxDist;
const dvar_t* shatterFxMinEdgeLength;
const dvar_t* show_reticle_during_swimming;
const dvar_t* showdrop;
const dvar_t* showevents;
const dvar_t* showpackets;
const dvar_t* shrapnelSpanCylinderHeight;
const dvar_t* sm_enable;
const dvar_t* sm_lightScore_eyeProjectDist;
const dvar_t* sm_lightScore_spotProjectFrac;
const dvar_t* sm_polygonOffsetScale;
const dvar_t* sm_spotPolygonOffsetBias;
const dvar_t* sm_spotPolygonOffsetScale;
const dvar_t* sm_sunPolygonOffsetBias;
const dvar_t* sm_sunPolygonOffsetScale;
const dvar_t* snd_assert_on_animation_prime;
const dvar_t* snd_assert_on_duck_stop;
const dvar_t* snd_assert_on_enqueue;
const dvar_t* snd_assert_on_play;
const dvar_t* snd_assert_on_stop;
const dvar_t* snd_debug_alias_filter;
const dvar_t* snd_debug_context_type;
const dvar_t* snd_debug_context_value;
const dvar_t* snd_debug_duck;
const dvar_t* snd_disable_ducks;
const dvar_t* snd_dlpf_attenuation;
const dvar_t* snd_dlpf_max_distance;
const dvar_t* snd_dlpf_min_distance;
const dvar_t* snd_dopplerRate;
const dvar_t* snd_dopplerScale;
const dvar_t* snd_dry_scale;
const dvar_t* snd_dsp_futz;
const dvar_t* snd_enable_pitch;
const dvar_t* snd_flux_separation;
const dvar_t* snd_force_pfutz;
const dvar_t* snd_futz_force;
const dvar_t* snd_futz_min;
const dvar_t* snd_gfutz_override;
const dvar_t* snd_global_pitch;
const dvar_t* snd_isbig_distance;
const dvar_t* snd_levelFadeTime;
const dvar_t* snd_losOcclusion;
const dvar_t* snd_master_override;
const dvar_t* snd_mute_alias_substring;
const dvar_t* snd_occlusion_attenuation;
const dvar_t* snd_occlusion_cull_distance;
const dvar_t* snd_occlusion_rate;
const dvar_t* snd_pitch_timescale;
const dvar_t* snd_playing_priority_boost;
const dvar_t* snd_reverb_override;
const dvar_t* snd_skip_muted_sounds;
const dvar_t* snd_solo_alias_substring;
const dvar_t* snd_solo_loaded;
const dvar_t* snd_solo_snapshot_group;
const dvar_t* snd_solo_streams;
const dvar_t* snd_start_alias;
const dvar_t* snd_start_alias_distance;
const dvar_t* snd_stop_alias;
const dvar_t* snd_stress;
const dvar_t* snd_timescale_filter;
const dvar_t* snd_voice_duck_override;
const dvar_t* snd_wet_scale;
const dvar_t* sv_SnapshotPeek;
const dvar_t* sv_archiveClientsPositions;
const dvar_t* sv_botsPressAttackBtn;
const dvar_t* sv_clientArchive;
const dvar_t* sv_clientFrameRateFix;
const dvar_t* sv_debugRate;
const dvar_t* sv_debugReliableCmds;
const dvar_t* sv_forcelicensetype;
const dvar_t* sv_fx_blockMinDist;
const dvar_t* sv_kickBanTime;
const dvar_t* sv_maxHappyPingTime;
const dvar_t* sv_maxRate;
const dvar_t* sv_packet_info;
const dvar_t* sv_padPackets;
const dvar_t* sv_printMessageSize;
const dvar_t* sv_showAverageBPS;
const dvar_t* sv_showPingSpam;
const dvar_t* sv_useAnimCulling;
const dvar_t* test_levels_bsps;
const dvar_t* test_levels_choices;
const dvar_t* test_levels_names;
const dvar_t* test_levels_selection;
const dvar_t* tickerStandardWidth;
const dvar_t* tickerWidescreenWidth;
const dvar_t* timeUntilDropRange;
const dvar_t* tracer_explosiveColor1;
const dvar_t* tracer_explosiveColor2;
const dvar_t* tracer_explosiveColor3;
const dvar_t* tracer_explosiveColor4;
const dvar_t* tracer_explosiveColor5;
const dvar_t* tracer_explosiveOverride;
const dvar_t* tracer_explosiveWidth;
const dvar_t* tracer_firstPersonMaxWidth;
const dvar_t* tracer_stoppingPowerColor1;
const dvar_t* tracer_stoppingPowerColor2;
const dvar_t* tracer_stoppingPowerColor3;
const dvar_t* tracer_stoppingPowerColor4;
const dvar_t* tracer_stoppingPowerColor5;
const dvar_t* tracer_stoppingPowerColor6;
const dvar_t* tracer_stoppingPowerOverride;
const dvar_t* tracer_stoppingPowerWidth;
const dvar_t* tracer_thermalWidthMult;
const dvar_t* turret_placement_debug;
const dvar_t* turret_placement_feet_offset;
const dvar_t* turret_placement_feet_trace_dist_z;
const dvar_t* turret_placement_trace_dist;
const dvar_t* turret_placement_trace_dist_wallmount;
const dvar_t* turret_placement_trace_dist_zm;
const dvar_t* turret_placement_trace_min_normal;
const dvar_t* turret_placement_trace_pitch;
const dvar_t* turret_placement_trace_radius_canon_safety;
const dvar_t* ui_blurAmount;
const dvar_t* ui_blurDarkenAmount;
const dvar_t* ui_blurTime;
const dvar_t* ui_buildLocation;
const dvar_t* ui_buildSize;
const dvar_t* ui_cinematicsTimestamp;
const dvar_t* ui_drawCrosshair;
const dvar_t* ui_dropdownListMax;
const dvar_t* ui_dropdownMax;
const dvar_t* ui_fxFontFalloff;
const dvar_t* ui_fxFontGlowSize;
const dvar_t* ui_fxFontOutlineSize;
const dvar_t* ui_fxFontShadowOffset;
const dvar_t* ui_fxFontShadowSize;
const dvar_t* ui_fxFontTweaks;
const dvar_t* ui_playerNemesisColor;
const dvar_t* ui_playerSquadColor;
const dvar_t* ui_saveMessageMinTime;
const dvar_t* ui_showList;
const dvar_t* ui_textPaddingOverride;
const dvar_t* uiscript_debug;
const dvar_t* useFastFile;
const dvar_t* useForceEliteCmds;
const dvar_t* useWalkPathnodesMode;
const dvar_t* vehControlMode;
const dvar_t* vehHelicopterAlwaysFaceCamera;
const dvar_t* vehHelicopterAlwaysFaceCameraRate;
const dvar_t* vehHelicopterHeadSwayDontSwayTheTurret;
const dvar_t* vehHelicopterJitterJerkyness;
const dvar_t* vehHudDrawPipOnStickWhenFreelooking;
const dvar_t* vehHudLineWidth;
const dvar_t* vehHudReticleBouncingDiamondSize;
const dvar_t* vehHudReticleBouncingRadius;
const dvar_t* vehHudReticleBouncingSpeed;
const dvar_t* vehHudReticlePipOnAStickCenterCircle;
const dvar_t* vehHudReticlePipOnAStickCenterCircleBuffer;
const dvar_t* vehHudReticlePipOnAStickMovingCircle;
const dvar_t* vehHudReticlePipOnAStickMovingCircleBuffer;
const dvar_t* vehPlaneInvertPitch;
const dvar_t* vehPlaneJetControls;
const dvar_t* vehRecenterDelay;
const dvar_t* vehicle_perk_boost_duration_seconds;
const dvar_t* voiceDegrade;
const dvar_t* waypointDebugDraw;
const dvar_t* weaponCamoLodDist;
const dvar_t* weaponClanTagLodDist;
const dvar_t* weaponClanTagShieldLodDist;
const dvar_t* weaponEmblemLodDist;
const dvar_t* weaponEmblemShieldLodDist;
const dvar_t* xanim_monitorEnt;
const dvar_t* xanim_monitorFilter;
const dvar_t* xbox_dwMatchmaking;
const dvar_t* xenon_voiceDebug;
#pragma endregion

void Dvar_SetInAutoExec(bool);
bool Dvar_IsSystemActive(void);
bool Dvar_IsValidName(const char*);
void Dvar_CopyString(const char*, DvarValue*);
void Dvar_WeakCopyString(const char*, DvarValue*);
bool Dvar_ShouldFreeCurrentString(dvar_t*);
bool Dvar_ShouldFreeLatchedString(dvar_t*);
bool Dvar_ShouldFreeResetString(dvar_t*);
void Dvar_FreeString(DvarValue*);
void Dvar_AssignCurrentStringValue(dvar_t*, DvarValue*, const char*);
void Dvar_AssignLatchedStringValue(dvar_t*, DvarValue*, const char*);
void Dvar_AssignResetStringValue(dvar_t*, DvarValue*, const char*);
char* Dvar_EnumToString(dvar_t const*);
char* Dvar_IndexStringToEnumString(dvar_t const*, const char*);
char* Dvar_ValueToString(dvar_t const*, DvarValue);
bool Dvar_StringToBool(const char*);
int Dvar_StringToInt(const char*);
__int64 Dvar_StringToInt64(const char*);
float Dvar_StringToFloat(const char*);
void Dvar_StringToVec2(const char*, vec2_t*);
void Dvar_StringToVec3(const char*, vec3_t*);
void Dvar_StringToVec4(const char*, vec4_t*);
int Dvar_StringToEnum(DvarLimits const*, const char*);
void Dvar_StringToColor(char*, const char*);
DvarValue* Dvar_StringToValue(dvarType_t, const char*, DvarLimits);
char* Dvar_DisplayableValue(dvar_t const*);
char* Dvar_DisplayableResetValue(dvar_t const*);
char* Dvar_DisplayableLatchedValue(dvar_t const*);
DvarValue Dvar_ClampValueToDomain(dvarType_t, DvarValue, DvarValue, DvarLimits);
bool Dvar_ValueInDomain(dvarType_t, DvarValue, DvarLimits);
void Dvar_VectorDomainToString(int, char*, int, DvarLimits);
char* Dvar_DomainToString_Internal(char*, int, dvarType_t, DvarLimits, int*);
char* Dvar_DomainToString_GetLines(dvarType_t, DvarLimits, char*, int, int*);
void Dvar_PrintDomain(dvarType_t, DvarLimits);
bool Dvar_ValuesEqual(DvarValue, DvarValue);
void Dvar_SetLatchedValue(dvar_t*, DvarValue);
bool Dvar_HasLatchedValue(dvar_t const*);
dvarCallBack_t* findCallBackForDvar(dvar_t const*);
dvar_t* Dvar_FindMalleableVar(int);
dvar_t* Dvar_FindMalleableVar(const char*);
dvar_t* Dvar_FindVar(const char*);
dvar_t* Dvar_FindVar(int);
void Dvar_ClearModified(dvar_t*);
void Dvar_SetModified(dvar_t*);
bool Dvar_GetModified(const dvar_t*);
int Dvar_GetInt(int);
unsigned int Dvar_GetUnsignedInt(dvar_t const*);
float Dvar_GetFloat(int);
void Dvar_GetVec2(const dvar_t*, vec2_t*);
void Dvar_GetVec3(const dvar_t*, vec3_t*);
void Dvar_GetVec4(const dvar_t*, vec4_t*);
char* Dvar_GetString(const dvar_t*);
char* Dvar_GetVariantString(int);
char* Dvar_GetVariantString(const dvar_t*);
void Dvar_GetUnpackedColor(dvar_t const*, vec4_t&);
void Dvar_GetColor(const dvar_t*, char*);
float Dvar_GetColorRed(dvar_t const*);
float Dvar_GetColorRed(int);
float Dvar_GetColorGreen(dvar_t const*);
float Dvar_GetColorGreen(int);
float Dvar_GetColorBlue(dvar_t const*);
float Dvar_GetColorBlue(int);
float Dvar_GetColorAlpha(dvar_t const*);
float Dvar_GetColorAlpha(int);
bool Dvar_GetLatchedBool(dvar_t const*);
int Dvar_GetLatchedInt(dvar_t const*);
float Dvar_GetLatchedFloat(dvar_t const*);
void Dvar_GetLatchedVec2(dvar_t const*, vec2_t*);
void Dvar_GetLatchedVec3(dvar_t const*, vec3_t*);
void Dvar_GetLatchedVec4(dvar_t const*, vec4_t*);
void Dvar_GetLatchedColor(dvar_t const*, char*);
int Dvar_GetResetInt(dvar_t const*);
const char* Dvar_GetResetString(dvar_t const*);
void Dvar_GetResetVec3(dvar_t const*, vec3_t&);
char** Dvar_GetDomainEnumStrings(dvar_t const*);
int Dvar_GetDomainEnumStringCount(dvar_t const*);
int Dvar_GetDomainIntMin(dvar_t const*);
int Dvar_GetDomainIntMax(dvar_t const*);
__int64 Dvar_GetDomainInt64Min(dvar_t const*);
__int64 Dvar_GetDomainInt64Max(dvar_t const*);
float Dvar_GetDomainFloatMin(dvar_t const*);
float Dvar_GetDomainFloatMax(dvar_t const*);
float Dvar_GetDomainVecMin(dvar_t const*);
float Dvar_GetDomainVecMax(dvar_t const*);
dvarType_t Dvar_GetType(dvar_t const*);
DvarValue Dvar_GetCurrent(dvar_t const*);
DvarLimits Dvar_GetDomain(dvar_t const*);
const char* Dvar_GetDescription(dvar_t const*);
unsigned int Dvar_GetFlags(dvar_t const*);
const char* Dvar_GetName(dvar_t const*);
void Dvar_Shutdown(void);
void Dvar_PerformUnregistration(dvar_t*);
void Dvar_UpdateResetValue(dvar_t*, DvarValue);
void Dvar_ChangeResetValue(dvar_t const*, DvarValue);
void Dvar_UpdateValue(dvar_t*, DvarValue);
void Dvar_MakeExplicitType(dvar_t*, const char*, dvarType_t, unsigned __int16, DvarValue, DvarLimits domain);
void Dvar_ReinterpretDvar(dvar_t*, unsigned int, const char*, dvarType_t, DvarValue, DvarLimits);
dvar_t* Dvar_RegisterNew(const char*, dvarType_t, unsigned int, DvarValue, DvarLimits, const char*);
void Dvar_AddFlags(dvar_t*, int);
int Com_SaveDvarsToBuffer(const char**, unsigned int, char*, unsigned int);
void Dvar_SetModifiedCallback(dvar_t*, void (*)(dvar_t const*));
void Dvar_SetCanSetConfigDvars(bool);
bool Dvar_CanSetConfigDvar(dvar_t const*);
bool Dvar_CanChangeValue(dvar_t const*, DvarValue, DvarSetSource);
void Dvar_SetVariant(dvar_t*, DvarValue, DvarSetSource);
void Dvar_UpdateEnumDomain(dvar_t*, const char**);
bool Dvar_GetBool(dvar_t const*);
int Dvar_GetInt(dvar_t const*);
__int64 Dvar_GetInt64(dvar_t const*);
float Dvar_GetFloat(dvar_t const*);
void Dvar_MakeLatchedValueCurrent(dvar_t const*);
void Dvar_Reregister(dvar_t*, const char*, dvarType_t, unsigned int, DvarValue, DvarLimits, const char*);
dvar_t* Dvar_RegisterVariant(const char*, dvarType_t, unsigned int, DvarValue, DvarLimits, const char*);
dvar_t* _Dvar_RegisterBool(const char*, bool, unsigned int, const char*);
dvar_t* _Dvar_RegisterInt(const char*, int, int, int, unsigned int, const char*);
dvar_t* _Dvar_RegisterInt64(const char*, __int64, __int64, __int64, unsigned int, const char*);
dvar_t* _Dvar_RegisterFloat(const char*, float, float, float, unsigned int, const char*);
dvar_t* _Dvar_RegisterVec2(const char*, float, float, float, float, unsigned int, const char*);
dvar_t* _Dvar_RegisterVec3(const char*, float, float, float, float, float, unsigned int, const char*);
dvar_t* _Dvar_RegisterVec4(const char*, float, float, float, float, float, float, unsigned int, const char*);
dvar_t* _Dvar_RegisterString(const char*, const char*, unsigned int, const char*);
dvar_t* _Dvar_RegisterEnum(const char*, const char**, int, unsigned int, const char*);
dvar_t* _Dvar_RegisterColor(const char*, float, float, float, float, unsigned int, const char*);
dvar_t* _Dvar_RegisterLinearRGB(const char*, float, float, float, float, float, unsigned int, const char*);
dvar_t* _Dvar_RegisterColorXYZ(const char*, float, float, float, float, float, unsigned int, const char*);
void Dvar_SetBoolFromSource(dvar_t const*, bool, DvarSetSource);
void Dvar_SetIntFromSource(dvar_t const*, int, DvarSetSource);
void Dvar_SetInt64FromSource(dvar_t const*, __int64, DvarSetSource);
void Dvar_SetFloatFromSource(dvar_t const*, float, DvarSetSource);
void Dvar_SetVec2FromSource(dvar_t const*, float, float, DvarSetSource);
void Dvar_SetVec3FromSource(dvar_t const*, float, float, float, DvarSetSource);
void Dvar_SetVec4FromSource(dvar_t const*, float, float, float, float, DvarSetSource);
void Dvar_SetStringFromSource(dvar_t const*, const char*, DvarSetSource);
void Dvar_SetColorFromSource(dvar_t const*, float, float, float, float, DvarSetSource);
void Dvar_SetBool(dvar_t const*, bool);
void Dvar_SetInt(dvar_t const*, int);
void Dvar_SetFloat(dvar_t const*, float);
void Dvar_SetVec2(dvar_t const*, float, float);
void Dvar_SetVec3(dvar_t const*, float, float, float);
void Dvar_SetVec4(dvar_t const*, float, float, float, float);
void Dvar_SetVec4FromVec4(dvar_t const*, vec4_t*);
void Dvar_SetString(dvar_t const*, const char*);
dvar_t* Dvar_SetOrRegisterString(dvar_t const*, const char*, const char*);
void Dvar_SetColor(dvar_t const*, float, float, float, float);
dvar_t* Dvar_SetFromStringByNameFromSource(const char*, const char*, DvarSetSource, unsigned int);
void Dvar_SetFromStringFromSource(dvar_t const*, const char*, DvarSetSource);
void Dvar_SetFromString(dvar_t const*, const char*);
void Dvar_SetFromStringByName(const char*, const char*);
void Dvar_SetCommand(const char*, const char*);
void Dvar_Reset(dvar_t const*, DvarSetSource);
void Dvar_SetCheatState(void);
void Dvar_Init(void);
void Dvar_LoadDvarsAddFlags(MemoryFile*, unsigned short);
void Dvar_LoadDvars(MemoryFile*);
void Dvar_LoadScriptInfo(MemoryFile*);
void Dvar_ResetDvars(unsigned int, DvarSetSource);
int Com_LoadDvarsFromBufferOptional(const char** const, bool*, unsigned int, const char*, const char*);
void Dvar_SetBoolIfChanged(dvar_t const*, bool);
void Dvar_SetIntIfChanged(dvar_t const*, int);
void Dvar_SetFloatIfChanged(dvar_t const*, float);
void Dvar_SetStringIfChanged(dvar_t const*, const char*);
void Dvar_DoModifiedCallbacks(void);
int Com_LoadDvarsFromBuffer(const char** const, unsigned int, const char*, const char*);
void Dvar_Sort(void);
void Dvar_ForEach(void (*)(dvar_t const*, void*), void*);
void Dvar_ForEachName(void (*)(const char*));
void Dvar_ForEachName(LocalClientNum_t, void (*)(LocalClientNum_t, const char*));